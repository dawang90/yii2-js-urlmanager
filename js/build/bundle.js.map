{"version":3,"sources":["webpack:///webpack/bootstrap 7332799892690628d9f7","webpack:///./src/app.ts","webpack:///./src/UrlManager.ts","webpack:///./src/UrlRule.ts"],"names":[],"mappings":"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","file":"./build/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7332799892690628d9f7","import UrlManager from './UrlManager';\n\nvar urlManager = new UrlManager({\n    enablePrettyUrl: true,\n    rules: []\n});\nconsole.log(urlManager);\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","import UrlRule from './UrlRule';\n\ndeclare global {\n    interface String {\n        escapeRegexp(): string;\n    }\n    interface Object {\n        buildQueryString() : string;\n    }\n    interface IUrlParams\n    {\n        [index: string]: number | string;\n    }\n}\n\nString.prototype.escapeRegexp = function() : string {\n    return this.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nObject.prototype.buildQueryString = function() : string {\n    return Object.keys(this)\n        .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(this[key]))\n        .join('&');\n};\n\ninterface IRule\n{\n    name: string;\n    route: string;\n}\n\ninterface IUrlManagerConfig {\n    enablePrettyUrl?: boolean;\n    rules: IRule[]\n}\n\n/**\n * urlManager allow create URLs based php configuration urlManager component\n */\nexport default class UrlManager {\n    /**\n     * Allow to create human-friendly URLs\n     */\n    private enablePrettyUrl: boolean;\n    /**\n     * The rules for creating URLs\n     */\n    private rules: UrlRule[];\n\n    constructor(config: IUrlManagerConfig) {\n        this.enablePrettyUrl = config.enablePrettyUrl;\n        this.rules = this.buildRules(config.rules);\n    };\n\n    /**\n     * Create urlRule objects\n     * @param rules The rules declaration\n     * @returns {UrlRule[]}\n     */\n    protected buildRules(rules: IRule[]) : UrlRule[] {\n        let result: UrlRule[] = [];\n\n        for (let rule of rules) {\n            result.push(new UrlRule(rule.name, rule.route));\n        }\n\n        return result;\n    };\n\n    /**\n     * Creates a URL using the given route and query parameters.\n     * @param route The route\n     * @param urlParams The query parameters\n     * @returns {string}\n     */\n    public createUrl(route: string, urlParams: IUrlParams) : string {\n        let result: string = route;\n\n        for (let rule of this.rules) {\n            let compiledRule = rule.createUrl(route, urlParams);\n            if (compiledRule !== false) {\n                return <string>compiledRule;\n            }\n        }\n\n        return result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UrlManager.ts","/**\n * UrlRule is a rule for generating URLs\n */\nexport default class UrlRule {\n    /**\n     * The name of this url\n     */\n    private name: string;\n    /**\n     * The route to the controller action\n     */\n    private route: string;\n\n    constructor(name: string, route: string) {\n        this.name = name;\n        this.route = route;\n    };\n\n    /**\n     * Create url\n     * @param route The route\n     * @param urlParams The parameters\n     * @returns {boolean | string} URL or false if this rule can't  be created\n     */\n    createUrl(route, urlParams: IUrlParams = {}) : boolean | string {\n        if (route !== this.route) {\n            return false;\n        }\n\n        let regexpGroups = /<([\\w._-]+):?([^>]+)?>/g;\n        let matches;\n\n        let resultRule = this.name;\n        let validRule = true;\n\n        do {\n            matches = regexpGroups.exec(this.name);\n            if (matches) {\n                let [group, groupKey, groupRegexpString] = matches;\n\n                let groupRegexp = new RegExp(groupRegexpString);\n                if (!groupRegexp.test(<string>urlParams[groupKey])) {\n                    validRule = false;\n                    break;\n                }\n\n                resultRule = resultRule.replace(new RegExp(group.escapeRegexp()), <string>urlParams[groupKey]);\n            }\n        } while (matches);\n\n        if (!validRule) {\n            return this.route + '?' + urlParams.buildQueryString();\n        }\n\n        return resultRule;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UrlRule.ts"],"sourceRoot":""}